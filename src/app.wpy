<style lang="less"></style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import '@/baseAPI.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/tabs/home',
      'pages/tabs/cates',
      'pages/tabs/search',
      'pages/tabs/cart',
      'pages/tabs/me',
      // 商品详情页
      'pages/goods_detail/main',
      // 商品列表页
      'pages/goods_list',
      // 提交订单页
      'pages/order',
      // 订单列表页
      'pages/orderList'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#d81e06',
      navigationBarTitleText: '黑马优购',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      // 选中时文本的颜色
      selectedColor: '#d81e06',
      // 所有tabBar节点的配置数组
      list: [
        {
          // 页面路径
          pagePath: 'pages/tabs/home',
          // 显示的文本
          text: '首页',
          // 图标路径
          iconPath: '/assets/icons/home.png',
          // 选中时图标的路径
          selectedIconPath: '/assets/icons/home-active.png'
        },
        {
          pagePath: 'pages/tabs/cates',
          text: '分类',
          iconPath: '/assets/icons/cates.png',
          selectedIconPath: '/assets/icons/cates-active.png'
        },
        {
          pagePath: 'pages/tabs/search',
          text: '搜索',
          iconPath: '/assets/icons/search.png',
          selectedIconPath: '/assets/icons/search-active.png'
        },
        {
          pagePath: 'pages/tabs/cart',
          text: '购物车',
          iconPath: '/assets/icons/cart.png',
          selectedIconPath: '/assets/icons/cart-active.png'
        },
        {
          pagePath: 'pages/tabs/me',
          text: '我的',
          iconPath: '/assets/icons/my.png',
          selectedIconPath: '/assets/icons/my-active.png'
        }
      ]
    },

    // 引用并注册全局组件 注意路径
    usingComponents: {
      // 轮播图组件
      'van-sidebar': './assets/vant/sidebar/index',
      'van-sidebar-item': './assets/vant/sidebar-item/index',
      // 布局相关组件
      'van-row': './assets/vant/row/index',
      'van-col': './assets/vant/col/index',
      // 搜索框组件
      'van-search': './assets/vant/search/index',
      // 单元格组件
      'van-cell': './assets/vant/cell/index',
      'van-cell-group': './assets/vant/cell-group/index',
      // 图标
      'van-icon': './assets/vant/icon/index',
      // tag标签
      'van-tag': './assets/vant/tag/index',
      // 商品卡片组件
      'van-card': './assets/vant/card/index',
      // tab 标签页
      'van-tab': './assets/vant/tab/index',
      'van-tabs': './assets/vant/tabs/index',
      // 把HTML 代码转换成wxml 代码的插件
      wxparse: './assets/wxparse/wxparse',
      // 商品导航组件
      'van-goods-action': './assets/vant/goods-action/index',
      'van-goods-action-icon': './assets/vant/goods-action-icon/index',
      'van-goods-action-button': './assets/vant/goods-action-button/index',
      // 步进器组件
      'van-stepper': './assets/vant/stepper/index',
      // 复选框组件
      'van-checkbox': './assets/vant/checkbox/index',
      // 滑动单元格组件
      'van-swipe-cell': './assets/vant/swipe-cell/index',
      // 提交订单栏组件
      'van-submit-bar': './assets/vant/submit-bar/index',
      // 按钮组件
      'van-button': './assets/vant/button/index',
      // panel面板组件
      'van-panel': './assets/vant/panel/index'
    }
  }

  // 存储全局共享的数据
  // 只需要通过 this.$parent.globalData 就可以拿到这个全局共享的对象
  globalData = {
    // 全局的购物车列表
    cart: [],
    // 当前购物车已经勾选的数量
    total: 0
  }

  // 自定义一个把商品添加到购物车列表中的全局方法
  addGoodsToCart(goods) {
    console.log(1)
    const i = this.globalData.cart.findIndex(item => item.id === goods.goods_id)
    if (i !== -1) {
      this.globalData.cart[i].count++
      this.saveCartToStorage()
      return
    }
    // 梳理出来的商品信息对象
    const info = {
      // 商品id
      id: goods.goods_id,
      // 名称
      name: goods.goods_name,
      // 图片
      pic: goods.goods_small_logo,
      // 价格
      price: goods.goods_price,
      // 次数
      count: 1,
      // 是否选中
      isCheck: true
    }
    // 存储到购物车列表
    this.globalData.cart.push(info)
    this.saveCartToStorage()
  }

  // 保存购物车列表到本地
  saveCartToStorage() {
    wepy.setStorageSync('cart', this.globalData.cart)
    this.renderCartBadge()
  }

  // 更新商品的数量
  updataGoodsCount(id, count) {
    console.log(1)
    const i = this.globalData.cart.findIndex(item => item.id === id)
    if (i !== -1) {
      this.globalData.cart[i].count = count
    }

    this.saveCartToStorage()
  }

  // 更新商品选中状态值
  updataGoodsStatus(id, isCheck) {
    console.log(1)
    const i = this.globalData.cart.findIndex(item => item.id === id)
    if (i !== -1) {
      this.globalData.cart[i].isCheck = isCheck
    }

    this.saveCartToStorage()
  }

  // 删除商品
  removeGoodsById(id) {
    console.log(1)
    const i = this.globalData.cart.findIndex(item => item.id === id)
    if (i !== -1) {
      this.globalData.cart.splice(i, 1)
    }

    this.saveCartToStorage()
  }

  // 更新所有商品的选中状态
  updataAllGoodsStatus(status) {
    this.globalData.cart.forEach(x => {
      x.isCheck = status
    })
    this.saveCartToStorage()
  }

  // 购物车角标的数量
  async renderCartBadge() {
    let c = 0
    this.globalData.cart.forEach(item => {
      if (item.isCheck) {
        c += item.count
      }
    })
    this.globalData.total = c
    const res = await wepy
      .setTabBarBadge({
        index: 3,
        text: c + ''
      })
      .catch(err => err)

    // 设置tabBar失败
    if (res.errMsg !== 'setTabBarBadge:ok') {
    }
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify') // 开启异步API的promise功能

    // 添加拦截器
    this.intercept('request', {
      // 发出请求时的回调函数
      config(p) {
        wepy.showLoading({
          title: '数据加载中...'
        })
        // 在请求头里面携带token值
        p.header = {
          Authorization: wepy.getStorageSync('token')
        }
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p
      },

      // 请求成功后的回调函数
      success(p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求失败后的回调函数
      fail(p) {
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete(p) {
        wepy.hideLoading()
      }
    })
  }

  onLaunch() {
    console.log('小程序启动了')
    // 获取本地购物车列表
    this.globalData.cart = wepy.getStorageSync('cart') || []

    this.renderCartBadge()
  }
}
</script>
